From 1031e99a7b76e7c127a4670144803a4696d89357 Mon Sep 17 00:00:00 2001
From: Joao Antunes <jantunes@meta.com>
Date: Fri, 21 Oct 2022 00:07:08 -0700
Subject: [PATCH] Add support to build folly for arm64 w/ corotine support

---
 CMakeLists.txt | 36 +++++++++++++++++++++---------------
 1 file changed, 21 insertions(+), 15 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 9a4f76250..06ef004ce 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -75,6 +75,7 @@ fb_activate_static_library_option()
 
 set(CMAKE_CXX_STANDARD 17)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
+set(CMAKE_LIBRARY_ARCHITECTURE arm64)
 
 if("${CMAKE_LIBRARY_ARCHITECTURE}" STREQUAL "")
   # CMAKE_LIBRARY_ARCHITECTURE is not always set, so we have to assume
@@ -223,21 +224,26 @@ list(APPEND hfiles
   ${FOLLY_DIR}/test/TestUtils.h
 )
 
-if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
-  check_cxx_compiler_flag(-fcoroutines COMPILER_HAS_F_COROUTINES)
-  if (COMPILER_HAS_F_COROUTINES)
-    message(
-      STATUS
-      "GCC has support for C++ coroutines, setting flag for Folly build."
-    )
-    add_compile_options($<$<COMPILE_LANGUAGE:CXX>:-fcoroutines>)
-  else()
-    message(
-      STATUS
-      "GCC does not have support for C++ coroutines, "
-      "disabling Folly coroutine support."
-    )
-  endif()
+check_cxx_compiler_flag(-fcoroutines COMPILER_HAS_F_COROUTINES)
+check_cxx_compiler_flag(-fcoroutines-ts COMPILER_HAS_F_COROUTINES_TS)
+if (COMPILER_HAS_F_COROUTINES)
+  message(
+    STATUS
+    "Compiler has support for C++ coroutines, setting flag for Folly build."
+  )
+  add_compile_options($<$<COMPILE_LANGUAGE:CXX>:-fcoroutines>)
+elseif (COMPILER_HAS_F_COROUTINES_TS)
+  message(
+    STATUS
+    "Compiler has support for C++ coroutines, setting flag for Folly build."
+  )
+  add_compile_options($<$<COMPILE_LANGUAGE:CXX>:-fcoroutines-ts>)
+else()
+  message(
+    STATUS
+    "Compiler does not have support for C++ coroutines, "
+    "disabling Folly coroutine support."
+  )
 endif()
 
 # base64 SIMD files compilation
-- 
2.31.1

